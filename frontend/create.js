let questionCount = 0;

// Add question block dynamically
function addQuestion() {
  questionCount++;
  const container = document.getElementById("questionsContainer");

  const div = document.createElement("div");
  div.className = "question-block";
  div.innerHTML = `
    <h4>Question ${questionCount}</h4>
    <input type="text" name="question${questionCount}" placeholder="Write your question" required><br>

    <input type="text" name="opt1_${questionCount}" placeholder="Option 1" required>
    <input type="radio" name="correct_${questionCount}" value="0" required> тЬЕ<br>

    <input type="text" name="opt2_${questionCount}" placeholder="Option 2" required>
    <input type="radio" name="correct_${questionCount}" value="1"> тЬЕ<br>

    <input type="text" name="opt3_${questionCount}" placeholder="Option 3" required>
    <input type="radio" name="correct_${questionCount}" value="2"> тЬЕ<br>

    <input type="text" name="opt4_${questionCount}" placeholder="Option 4" required>
    <input type="radio" name="correct_${questionCount}" value="3"> тЬЕ<br>

    <hr>
  `;
  container.appendChild(div);
}

// Handle quiz form submission
document.getElementById("quizForm").addEventListener("submit", async function(e) {
  e.preventDefault();

  const formData = new FormData(e.target);
  const quiz = [{
    question: "ЁЯТЦ рждрзБржорж┐ рждрзЛржорж╛рж░ Best Friend ржХрзЗ ржХрждржЯрж╛ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ?",
    options: ["ржЕржирзЗржХ ржмрзЗрж╢рж┐ ЁЯе░", "ржПржХржЯрзБ ржПржХржЯрзБ ЁЯШЕ", "ржнрж╛рж▓рзЛржЗ ЁЯдЧ", "ржирзЗржЗ рждрзЗржоржи ЁЯШР"],
    correct: 0
  },
  {
    question: "ЁЯМН рждрзЛржорж╛рж░ Best Friend ржПрж░ рж╕рж╛ржерзЗ ржХрзЛржерж╛ржпрж╝ ржШрзБрж░рждрзЗ ржпрзЗрждрзЗ ржЪрж╛ржУ?",
    options: ["Darjeeling ЁЯМД", "Goa ЁЯПЦя╕П", "Cox's Bazar ЁЯМК", "Bandarban тЫ░я╕П"],
    correct: 2
  },
  {
    question: "ЁЯНЭ Best Friend ржПрж░ рж╕рж╛ржерзЗ ржХрзА ржЦрзЗрждрзЗ ржнрж╛рж▓рзЛ рж▓рж╛ржЧрзЗ?",
    options: ["Biriyani ЁЯНЧ", "Pizza ЁЯНХ", "Fuchka ЁЯМ░", "Ice Cream ЁЯНж"],
    correct: 0
  },
  {
    question: "ЁЯОм ржХрзЛржи ржЯрж╛ржЗржк ржорзБржнрж┐ ржПржХрж╕рж╛ржерзЗ ржжрзЗржЦрждрзЗ ржкржЫржирзНржж ржХрж░рзЛ?",
    options: ["Romantic ЁЯТХ", "Comedy ЁЯШВ", "Horror ЁЯС╗", "Action ЁЯФл"],
    correct: 1
  },
  {
    question: "ЁЯУ╕ рждрзЛржорж╛рж░ Best Friend ржПрж░ ржХрзЛржи ржЬрж┐ржирж┐рж╕ржЯрж╛ рж╕ржмржЪрзЗрзЯрзЗ ржкрзНрж░рж┐рзЯ?",
    options: ["рж╣рж╛рж╕рж┐ ЁЯШК", "ржЪрзЛржЦ ЁЯСА", "ржнржпрж╝рзЗрж╕ ЁЯОЩя╕П", "ржмрзНржпржмрж╣рж╛рж░ ЁЯдЭ"],
    correct: 3
  },
  {
    question: "ЁЯОБ ржпржжрж┐ ржХрж┐ржЫрзБ ржЧрж┐ржлржЯ ржХрж░рждрзЗ ржкрж╛рж░рзЛ, ржХрзА ржжрзЗржмрзЗ?",
    options: ["Watch тМЪ", "Perfume ЁЯМ╕", "T-Shirt ЁЯСХ", "Book ЁЯУЪ"],
    correct: 1
  },
  {
    question: "ЁЯУЮ Best Friend ржПрж░ рж╕рж╛ржерзЗ ржжрж┐ржирзЗ ржХрзЯржмрж╛рж░ ржХржерж╛ ржмрж▓рзЛ?",
    options: ["рзз ржмрж╛рж░ тШЭя╕П", "рзи-рзй ржмрж╛рж░ ЁЯУ▓", "ржЕржирзЗржХржмрж╛рж░ ЁЯФБ", "ржкрзНрж░рж╛рзЯ ржмрж▓рж┐ ржирж╛ ЁЯдР"],
    correct: 2
  },
  {
    question: "ЁЯХКя╕П рждрзБржорж┐ ржХрж┐ ржУрж░ рж╕рж╛ржерзЗ ржоржи ржЦрзБрж▓рзЗ рж╕ржм ржХржерж╛ ржмрж▓рждрзЗ ржкрж╛рж░рзЛ?",
    options: ["рж╣рзНржпрж╛ржБ, рж╕ржмржЗ ржмрж▓рж┐ ЁЯе╣", "ржХрж┐ржЫрзБржЯрж╛ ЁЯдФ", "ржЦрзБржм ржХржо ЁЯШ╢", "ржирж╛ ЁЯШР"],
    correct: 0
  },
  {
    question: "ЁЯОо ржХрзЛржиржЯрж╛ ржмрзЗрж╢рж┐ ржкржЫржирзНржж ржХрж░рзЛ ржУрж░ рж╕рж╛ржерзЗ?",
    options: ["ржЖрж▓рж╛ржк ржХрж░рж╛ ЁЯЧгя╕П", "ржЧрзЗржо ржЦрзЗрж▓рж╛ ЁЯОо", "Movies ржжрзЗржЦрж╛ ЁЯОе", "ржЪрзБржкржЪрж╛ржк ржерж╛ржХрж╛ ЁЯЩК"],
    correct: 1
  },
  {
    question: "ЁЯТН рждрзБржорж┐ ржХрж┐ рждрзЛржорж╛рж░ Best Friend ржХрзЗ Biye ржХрж░рждрзЗ ржЪрж╛ржУ?",
    options: ["рж╣рзНржпрж╛ржБ ЁЯШН", "ржирж╛ ЁЯЩЕтАНтЩВя╕П", "рж╕ржорзЯ ржмрж▓рзЗ ржжрзЗржмрзЗ тП│", "ржнрзЗржмрзЗ ржжрзЗржЦрж┐ржирж┐ ЁЯдФ"],
    correct: 0
  }
];

  for (let i = 1; i <= questionCount; i++) {
    const q = formData.get(`question${i}`);
    const options = [
      formData.get(`opt1_${i}`),
      formData.get(`opt2_${i}`),
      formData.get(`opt3_${i}`),
      formData.get(`opt4_${i}`)
    ];
    const correct = parseInt(formData.get(`correct_${i}`));
    quiz.push({ question: q, options, correct });
  }

  // Send to backend
  const res = await fetch("/create-quiz", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ quiz })
  });

  const data = await res.json();

  // Show generated quiz link
  const quizId = data.quiz_id;
  const link = `${window.location.origin}/play.html?quiz_id=${quizId}`;
  const linkBox = document.getElementById("quizLink");

  linkBox.innerHTML = `
    <p><strong>ЁЯОЙ Quiz Created!</strong></p>
    <a href="${link}" id="linkOutput" target="_blank">${link}</a><br>
    <button onclick="copyToClipboard('${link}')">ЁЯУЛ Copy Link</button>
  `;
  linkBox.style.display = "block";
});

// Copy link to clipboard
function copyToClipboard(text) {
  navigator.clipboard.writeText(text)
    .then(() => alert("Link copied! тЬЕ"))
    .catch(() => alert("Failed to copy link."));
}
